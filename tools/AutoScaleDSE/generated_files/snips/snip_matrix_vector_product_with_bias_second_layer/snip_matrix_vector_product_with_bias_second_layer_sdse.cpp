
//===------------------------------------------------------------*- C++ -*-===//
//
// Automatically generated file for High-level Synthesis (HLS).
//
//===----------------------------------------------------------------------===//

#include <algorithm>
#include <ap_axi_sdata.h>
#include <ap_fixed.h>
#include <ap_int.h>
#include <hls_math.h>
#include <hls_stream.h>
#include <math.h>
#include <stdint.h>

using namespace std;

/// This is top function.
/// Latency=394, interval=394
/// DSP=320
void matrix_vector_product_with_bias_second_layer(
  double v0[64],
  double v1[4096],
  double v2[64],
  double v3[64],
  double v4[1]
) {	// L5, [0,394)
  #pragma HLS interface s_axilite port=return bundle=ctrl
  #pragma HLS interface bram port=v0
  #pragma HLS interface bram port=v1
  #pragma HLS interface bram port=v2

  #pragma HLS resource variable=v0 core=ram_1p_bram

  #pragma HLS array_partition variable=v1 cyclic factor=128 dim=1
  #pragma HLS resource variable=v1 core=ram_s2p_bram

  #pragma HLS array_partition variable=v2 cyclic factor=2 dim=1
  #pragma HLS resource variable=v2 core=ram_s2p_bram

  #pragma HLS array_partition variable=v3 cyclic factor=64 dim=1

  for (int v5 = 0; v5 < 32; v5 += 1) {	// L8, [0,391), iterCycle=327, II=2
    #pragma HLS pipeline II=2
    double v6 = v1[(v5 * 128)];	// L9, [0,2)
    double v7 = v3[0];	// L10, [0,2)
    double v8 = v6 * v7;	// L11, [2,6)
    double v9 = v8 + 0.000000;	// L12, [6,11)
    double v10 = v1[((v5 * 128) + 64)];	// L13, [0,2)
    double v11 = v10 * v7;	// L14, [2,6)
    double v12 = v11 + 0.000000;	// L15, [6,11)
    double v13 = v1[((v5 * 128) + 1)];	// L16, [5,7)
    double v14 = v3[1];	// L17, [5,7)
    double v15 = v13 * v14;	// L18, [7,11)
    double v16 = v9 + v15;	// L19, [11,16)
    double v17 = v1[((v5 * 128) + 65)];	// L20, [5,7)
    double v18 = v17 * v14;	// L21, [7,11)
    double v19 = v12 + v18;	// L22, [11,16)
    double v20 = v1[((v5 * 128) + 2)];	// L23, [10,12)
    double v21 = v3[2];	// L24, [10,12)
    double v22 = v20 * v21;	// L25, [12,16)
    double v23 = v16 + v22;	// L26, [16,21)
    double v24 = v1[((v5 * 128) + 66)];	// L27, [10,12)
    double v25 = v24 * v21;	// L28, [12,16)
    double v26 = v19 + v25;	// L29, [16,21)
    double v27 = v1[((v5 * 128) + 3)];	// L30, [15,17)
    double v28 = v3[3];	// L31, [15,17)
    double v29 = v27 * v28;	// L32, [17,21)
    double v30 = v23 + v29;	// L33, [21,26)
    double v31 = v1[((v5 * 128) + 67)];	// L34, [15,17)
    double v32 = v31 * v28;	// L35, [17,21)
    double v33 = v26 + v32;	// L36, [21,26)
    double v34 = v1[((v5 * 128) + 4)];	// L37, [20,22)
    double v35 = v3[4];	// L38, [20,22)
    double v36 = v34 * v35;	// L39, [22,26)
    double v37 = v30 + v36;	// L40, [26,31)
    double v38 = v1[((v5 * 128) + 68)];	// L41, [20,22)
    double v39 = v38 * v35;	// L42, [22,26)
    double v40 = v33 + v39;	// L43, [26,31)
    double v41 = v1[((v5 * 128) + 5)];	// L44, [25,27)
    double v42 = v3[5];	// L45, [25,27)
    double v43 = v41 * v42;	// L46, [27,31)
    double v44 = v37 + v43;	// L47, [31,36)
    double v45 = v1[((v5 * 128) + 69)];	// L48, [25,27)
    double v46 = v45 * v42;	// L49, [27,31)
    double v47 = v40 + v46;	// L50, [31,36)
    double v48 = v1[((v5 * 128) + 6)];	// L51, [30,32)
    double v49 = v3[6];	// L52, [30,32)
    double v50 = v48 * v49;	// L53, [32,36)
    double v51 = v44 + v50;	// L54, [36,41)
    double v52 = v1[((v5 * 128) + 70)];	// L55, [30,32)
    double v53 = v52 * v49;	// L56, [32,36)
    double v54 = v47 + v53;	// L57, [36,41)
    double v55 = v1[((v5 * 128) + 7)];	// L58, [35,37)
    double v56 = v3[7];	// L59, [35,37)
    double v57 = v55 * v56;	// L60, [37,41)
    double v58 = v51 + v57;	// L61, [41,46)
    double v59 = v1[((v5 * 128) + 71)];	// L62, [35,37)
    double v60 = v59 * v56;	// L63, [37,41)
    double v61 = v54 + v60;	// L64, [41,46)
    double v62 = v1[((v5 * 128) + 8)];	// L65, [40,42)
    double v63 = v3[8];	// L66, [40,42)
    double v64 = v62 * v63;	// L67, [42,46)
    double v65 = v58 + v64;	// L68, [46,51)
    double v66 = v1[((v5 * 128) + 72)];	// L69, [40,42)
    double v67 = v66 * v63;	// L70, [42,46)
    double v68 = v61 + v67;	// L71, [46,51)
    double v69 = v1[((v5 * 128) + 9)];	// L72, [45,47)
    double v70 = v3[9];	// L73, [45,47)
    double v71 = v69 * v70;	// L74, [47,51)
    double v72 = v65 + v71;	// L75, [51,56)
    double v73 = v1[((v5 * 128) + 73)];	// L76, [45,47)
    double v74 = v73 * v70;	// L77, [47,51)
    double v75 = v68 + v74;	// L78, [51,56)
    double v76 = v1[((v5 * 128) + 10)];	// L79, [50,52)
    double v77 = v3[10];	// L80, [50,52)
    double v78 = v76 * v77;	// L81, [52,56)
    double v79 = v72 + v78;	// L82, [56,61)
    double v80 = v1[((v5 * 128) + 74)];	// L83, [50,52)
    double v81 = v80 * v77;	// L84, [52,56)
    double v82 = v75 + v81;	// L85, [56,61)
    double v83 = v1[((v5 * 128) + 11)];	// L86, [55,57)
    double v84 = v3[11];	// L87, [55,57)
    double v85 = v83 * v84;	// L88, [57,61)
    double v86 = v79 + v85;	// L89, [61,66)
    double v87 = v1[((v5 * 128) + 75)];	// L90, [55,57)
    double v88 = v87 * v84;	// L91, [57,61)
    double v89 = v82 + v88;	// L92, [61,66)
    double v90 = v1[((v5 * 128) + 12)];	// L93, [60,62)
    double v91 = v3[12];	// L94, [60,62)
    double v92 = v90 * v91;	// L95, [62,66)
    double v93 = v86 + v92;	// L96, [66,71)
    double v94 = v1[((v5 * 128) + 76)];	// L97, [60,62)
    double v95 = v94 * v91;	// L98, [62,66)
    double v96 = v89 + v95;	// L99, [66,71)
    double v97 = v1[((v5 * 128) + 13)];	// L100, [65,67)
    double v98 = v3[13];	// L101, [65,67)
    double v99 = v97 * v98;	// L102, [67,71)
    double v100 = v93 + v99;	// L103, [71,76)
    double v101 = v1[((v5 * 128) + 77)];	// L104, [65,67)
    double v102 = v101 * v98;	// L105, [67,71)
    double v103 = v96 + v102;	// L106, [71,76)
    double v104 = v1[((v5 * 128) + 14)];	// L107, [70,72)
    double v105 = v3[14];	// L108, [70,72)
    double v106 = v104 * v105;	// L109, [72,76)
    double v107 = v100 + v106;	// L110, [76,81)
    double v108 = v1[((v5 * 128) + 78)];	// L111, [70,72)
    double v109 = v108 * v105;	// L112, [72,76)
    double v110 = v103 + v109;	// L113, [76,81)
    double v111 = v1[((v5 * 128) + 15)];	// L114, [75,77)
    double v112 = v3[15];	// L115, [75,77)
    double v113 = v111 * v112;	// L116, [77,81)
    double v114 = v107 + v113;	// L117, [81,86)
    double v115 = v1[((v5 * 128) + 79)];	// L118, [75,77)
    double v116 = v115 * v112;	// L119, [77,81)
    double v117 = v110 + v116;	// L120, [81,86)
    double v118 = v1[((v5 * 128) + 16)];	// L121, [80,82)
    double v119 = v3[16];	// L122, [80,82)
    double v120 = v118 * v119;	// L123, [82,86)
    double v121 = v114 + v120;	// L124, [86,91)
    double v122 = v1[((v5 * 128) + 80)];	// L125, [80,82)
    double v123 = v122 * v119;	// L126, [82,86)
    double v124 = v117 + v123;	// L127, [86,91)
    double v125 = v1[((v5 * 128) + 17)];	// L128, [85,87)
    double v126 = v3[17];	// L129, [85,87)
    double v127 = v125 * v126;	// L130, [87,91)
    double v128 = v121 + v127;	// L131, [91,96)
    double v129 = v1[((v5 * 128) + 81)];	// L132, [85,87)
    double v130 = v129 * v126;	// L133, [87,91)
    double v131 = v124 + v130;	// L134, [91,96)
    double v132 = v1[((v5 * 128) + 18)];	// L135, [90,92)
    double v133 = v3[18];	// L136, [90,92)
    double v134 = v132 * v133;	// L137, [92,96)
    double v135 = v128 + v134;	// L138, [96,101)
    double v136 = v1[((v5 * 128) + 82)];	// L139, [90,92)
    double v137 = v136 * v133;	// L140, [92,96)
    double v138 = v131 + v137;	// L141, [96,101)
    double v139 = v1[((v5 * 128) + 19)];	// L142, [95,97)
    double v140 = v3[19];	// L143, [95,97)
    double v141 = v139 * v140;	// L144, [97,101)
    double v142 = v135 + v141;	// L145, [101,106)
    double v143 = v1[((v5 * 128) + 83)];	// L146, [95,97)
    double v144 = v143 * v140;	// L147, [97,101)
    double v145 = v138 + v144;	// L148, [101,106)
    double v146 = v1[((v5 * 128) + 20)];	// L149, [100,102)
    double v147 = v3[20];	// L150, [100,102)
    double v148 = v146 * v147;	// L151, [102,106)
    double v149 = v142 + v148;	// L152, [106,111)
    double v150 = v1[((v5 * 128) + 84)];	// L153, [100,102)
    double v151 = v150 * v147;	// L154, [102,106)
    double v152 = v145 + v151;	// L155, [106,111)
    double v153 = v1[((v5 * 128) + 21)];	// L156, [105,107)
    double v154 = v3[21];	// L157, [105,107)
    double v155 = v153 * v154;	// L158, [107,111)
    double v156 = v149 + v155;	// L159, [111,116)
    double v157 = v1[((v5 * 128) + 85)];	// L160, [105,107)
    double v158 = v157 * v154;	// L161, [107,111)
    double v159 = v152 + v158;	// L162, [111,116)
    double v160 = v1[((v5 * 128) + 22)];	// L163, [110,112)
    double v161 = v3[22];	// L164, [110,112)
    double v162 = v160 * v161;	// L165, [112,116)
    double v163 = v156 + v162;	// L166, [116,121)
    double v164 = v1[((v5 * 128) + 86)];	// L167, [110,112)
    double v165 = v164 * v161;	// L168, [112,116)
    double v166 = v159 + v165;	// L169, [116,121)
    double v167 = v1[((v5 * 128) + 23)];	// L170, [115,117)
    double v168 = v3[23];	// L171, [115,117)
    double v169 = v167 * v168;	// L172, [117,121)
    double v170 = v163 + v169;	// L173, [121,126)
    double v171 = v1[((v5 * 128) + 87)];	// L174, [115,117)
    double v172 = v171 * v168;	// L175, [117,121)
    double v173 = v166 + v172;	// L176, [121,126)
    double v174 = v1[((v5 * 128) + 24)];	// L177, [120,122)
    double v175 = v3[24];	// L178, [120,122)
    double v176 = v174 * v175;	// L179, [122,126)
    double v177 = v170 + v176;	// L180, [126,131)
    double v178 = v1[((v5 * 128) + 88)];	// L181, [120,122)
    double v179 = v178 * v175;	// L182, [122,126)
    double v180 = v173 + v179;	// L183, [126,131)
    double v181 = v1[((v5 * 128) + 25)];	// L184, [125,127)
    double v182 = v3[25];	// L185, [125,127)
    double v183 = v181 * v182;	// L186, [127,131)
    double v184 = v177 + v183;	// L187, [131,136)
    double v185 = v1[((v5 * 128) + 89)];	// L188, [125,127)
    double v186 = v185 * v182;	// L189, [127,131)
    double v187 = v180 + v186;	// L190, [131,136)
    double v188 = v1[((v5 * 128) + 26)];	// L191, [130,132)
    double v189 = v3[26];	// L192, [130,132)
    double v190 = v188 * v189;	// L193, [132,136)
    double v191 = v184 + v190;	// L194, [136,141)
    double v192 = v1[((v5 * 128) + 90)];	// L195, [130,132)
    double v193 = v192 * v189;	// L196, [132,136)
    double v194 = v187 + v193;	// L197, [136,141)
    double v195 = v1[((v5 * 128) + 27)];	// L198, [135,137)
    double v196 = v3[27];	// L199, [135,137)
    double v197 = v195 * v196;	// L200, [137,141)
    double v198 = v191 + v197;	// L201, [141,146)
    double v199 = v1[((v5 * 128) + 91)];	// L202, [135,137)
    double v200 = v199 * v196;	// L203, [137,141)
    double v201 = v194 + v200;	// L204, [141,146)
    double v202 = v1[((v5 * 128) + 28)];	// L205, [140,142)
    double v203 = v3[28];	// L206, [140,142)
    double v204 = v202 * v203;	// L207, [142,146)
    double v205 = v198 + v204;	// L208, [146,151)
    double v206 = v1[((v5 * 128) + 92)];	// L209, [140,142)
    double v207 = v206 * v203;	// L210, [142,146)
    double v208 = v201 + v207;	// L211, [146,151)
    double v209 = v1[((v5 * 128) + 29)];	// L212, [145,147)
    double v210 = v3[29];	// L213, [145,147)
    double v211 = v209 * v210;	// L214, [147,151)
    double v212 = v205 + v211;	// L215, [151,156)
    double v213 = v1[((v5 * 128) + 93)];	// L216, [145,147)
    double v214 = v213 * v210;	// L217, [147,151)
    double v215 = v208 + v214;	// L218, [151,156)
    double v216 = v1[((v5 * 128) + 30)];	// L219, [150,152)
    double v217 = v3[30];	// L220, [150,152)
    double v218 = v216 * v217;	// L221, [152,156)
    double v219 = v212 + v218;	// L222, [156,161)
    double v220 = v1[((v5 * 128) + 94)];	// L223, [150,152)
    double v221 = v220 * v217;	// L224, [152,156)
    double v222 = v215 + v221;	// L225, [156,161)
    double v223 = v1[((v5 * 128) + 31)];	// L226, [155,157)
    double v224 = v3[31];	// L227, [155,157)
    double v225 = v223 * v224;	// L228, [157,161)
    double v226 = v219 + v225;	// L229, [161,166)
    double v227 = v1[((v5 * 128) + 95)];	// L230, [155,157)
    double v228 = v227 * v224;	// L231, [157,161)
    double v229 = v222 + v228;	// L232, [161,166)
    double v230 = v1[((v5 * 128) + 32)];	// L233, [160,162)
    double v231 = v3[32];	// L234, [160,162)
    double v232 = v230 * v231;	// L235, [162,166)
    double v233 = v226 + v232;	// L236, [166,171)
    double v234 = v1[((v5 * 128) + 96)];	// L237, [160,162)
    double v235 = v234 * v231;	// L238, [162,166)
    double v236 = v229 + v235;	// L239, [166,171)
    double v237 = v1[((v5 * 128) + 33)];	// L240, [165,167)
    double v238 = v3[33];	// L241, [165,167)
    double v239 = v237 * v238;	// L242, [167,171)
    double v240 = v233 + v239;	// L243, [171,176)
    double v241 = v1[((v5 * 128) + 97)];	// L244, [165,167)
    double v242 = v241 * v238;	// L245, [167,171)
    double v243 = v236 + v242;	// L246, [171,176)
    double v244 = v1[((v5 * 128) + 34)];	// L247, [170,172)
    double v245 = v3[34];	// L248, [170,172)
    double v246 = v244 * v245;	// L249, [172,176)
    double v247 = v240 + v246;	// L250, [176,181)
    double v248 = v1[((v5 * 128) + 98)];	// L251, [170,172)
    double v249 = v248 * v245;	// L252, [172,176)
    double v250 = v243 + v249;	// L253, [176,181)
    double v251 = v1[((v5 * 128) + 35)];	// L254, [175,177)
    double v252 = v3[35];	// L255, [175,177)
    double v253 = v251 * v252;	// L256, [177,181)
    double v254 = v247 + v253;	// L257, [181,186)
    double v255 = v1[((v5 * 128) + 99)];	// L258, [175,177)
    double v256 = v255 * v252;	// L259, [177,181)
    double v257 = v250 + v256;	// L260, [181,186)
    double v258 = v1[((v5 * 128) + 36)];	// L261, [180,182)
    double v259 = v3[36];	// L262, [180,182)
    double v260 = v258 * v259;	// L263, [182,186)
    double v261 = v254 + v260;	// L264, [186,191)
    double v262 = v1[((v5 * 128) + 100)];	// L265, [180,182)
    double v263 = v262 * v259;	// L266, [182,186)
    double v264 = v257 + v263;	// L267, [186,191)
    double v265 = v1[((v5 * 128) + 37)];	// L268, [185,187)
    double v266 = v3[37];	// L269, [185,187)
    double v267 = v265 * v266;	// L270, [187,191)
    double v268 = v261 + v267;	// L271, [191,196)
    double v269 = v1[((v5 * 128) + 101)];	// L272, [185,187)
    double v270 = v269 * v266;	// L273, [187,191)
    double v271 = v264 + v270;	// L274, [191,196)
    double v272 = v1[((v5 * 128) + 38)];	// L275, [190,192)
    double v273 = v3[38];	// L276, [190,192)
    double v274 = v272 * v273;	// L277, [192,196)
    double v275 = v268 + v274;	// L278, [196,201)
    double v276 = v1[((v5 * 128) + 102)];	// L279, [190,192)
    double v277 = v276 * v273;	// L280, [192,196)
    double v278 = v271 + v277;	// L281, [196,201)
    double v279 = v1[((v5 * 128) + 39)];	// L282, [195,197)
    double v280 = v3[39];	// L283, [195,197)
    double v281 = v279 * v280;	// L284, [197,201)
    double v282 = v275 + v281;	// L285, [201,206)
    double v283 = v1[((v5 * 128) + 103)];	// L286, [195,197)
    double v284 = v283 * v280;	// L287, [197,201)
    double v285 = v278 + v284;	// L288, [201,206)
    double v286 = v1[((v5 * 128) + 40)];	// L289, [200,202)
    double v287 = v3[40];	// L290, [200,202)
    double v288 = v286 * v287;	// L291, [202,206)
    double v289 = v282 + v288;	// L292, [206,211)
    double v290 = v1[((v5 * 128) + 104)];	// L293, [200,202)
    double v291 = v290 * v287;	// L294, [202,206)
    double v292 = v285 + v291;	// L295, [206,211)
    double v293 = v1[((v5 * 128) + 41)];	// L296, [205,207)
    double v294 = v3[41];	// L297, [205,207)
    double v295 = v293 * v294;	// L298, [207,211)
    double v296 = v289 + v295;	// L299, [211,216)
    double v297 = v1[((v5 * 128) + 105)];	// L300, [205,207)
    double v298 = v297 * v294;	// L301, [207,211)
    double v299 = v292 + v298;	// L302, [211,216)
    double v300 = v1[((v5 * 128) + 42)];	// L303, [210,212)
    double v301 = v3[42];	// L304, [210,212)
    double v302 = v300 * v301;	// L305, [212,216)
    double v303 = v296 + v302;	// L306, [216,221)
    double v304 = v1[((v5 * 128) + 106)];	// L307, [210,212)
    double v305 = v304 * v301;	// L308, [212,216)
    double v306 = v299 + v305;	// L309, [216,221)
    double v307 = v1[((v5 * 128) + 43)];	// L310, [215,217)
    double v308 = v3[43];	// L311, [215,217)
    double v309 = v307 * v308;	// L312, [217,221)
    double v310 = v303 + v309;	// L313, [221,226)
    double v311 = v1[((v5 * 128) + 107)];	// L314, [215,217)
    double v312 = v311 * v308;	// L315, [217,221)
    double v313 = v306 + v312;	// L316, [221,226)
    double v314 = v1[((v5 * 128) + 44)];	// L317, [220,222)
    double v315 = v3[44];	// L318, [220,222)
    double v316 = v314 * v315;	// L319, [222,226)
    double v317 = v310 + v316;	// L320, [226,231)
    double v318 = v1[((v5 * 128) + 108)];	// L321, [220,222)
    double v319 = v318 * v315;	// L322, [222,226)
    double v320 = v313 + v319;	// L323, [226,231)
    double v321 = v1[((v5 * 128) + 45)];	// L324, [225,227)
    double v322 = v3[45];	// L325, [225,227)
    double v323 = v321 * v322;	// L326, [227,231)
    double v324 = v317 + v323;	// L327, [231,236)
    double v325 = v1[((v5 * 128) + 109)];	// L328, [225,227)
    double v326 = v325 * v322;	// L329, [227,231)
    double v327 = v320 + v326;	// L330, [231,236)
    double v328 = v1[((v5 * 128) + 46)];	// L331, [230,232)
    double v329 = v3[46];	// L332, [230,232)
    double v330 = v328 * v329;	// L333, [232,236)
    double v331 = v324 + v330;	// L334, [236,241)
    double v332 = v1[((v5 * 128) + 110)];	// L335, [230,232)
    double v333 = v332 * v329;	// L336, [232,236)
    double v334 = v327 + v333;	// L337, [236,241)
    double v335 = v1[((v5 * 128) + 47)];	// L338, [235,237)
    double v336 = v3[47];	// L339, [235,237)
    double v337 = v335 * v336;	// L340, [237,241)
    double v338 = v331 + v337;	// L341, [241,246)
    double v339 = v1[((v5 * 128) + 111)];	// L342, [235,237)
    double v340 = v339 * v336;	// L343, [237,241)
    double v341 = v334 + v340;	// L344, [241,246)
    double v342 = v1[((v5 * 128) + 48)];	// L345, [240,242)
    double v343 = v3[48];	// L346, [240,242)
    double v344 = v342 * v343;	// L347, [242,246)
    double v345 = v338 + v344;	// L348, [246,251)
    double v346 = v1[((v5 * 128) + 112)];	// L349, [240,242)
    double v347 = v346 * v343;	// L350, [242,246)
    double v348 = v341 + v347;	// L351, [246,251)
    double v349 = v1[((v5 * 128) + 49)];	// L352, [245,247)
    double v350 = v3[49];	// L353, [245,247)
    double v351 = v349 * v350;	// L354, [247,251)
    double v352 = v345 + v351;	// L355, [251,256)
    double v353 = v1[((v5 * 128) + 113)];	// L356, [245,247)
    double v354 = v353 * v350;	// L357, [247,251)
    double v355 = v348 + v354;	// L358, [251,256)
    double v356 = v1[((v5 * 128) + 50)];	// L359, [250,252)
    double v357 = v3[50];	// L360, [250,252)
    double v358 = v356 * v357;	// L361, [252,256)
    double v359 = v352 + v358;	// L362, [256,261)
    double v360 = v1[((v5 * 128) + 114)];	// L363, [250,252)
    double v361 = v360 * v357;	// L364, [252,256)
    double v362 = v355 + v361;	// L365, [256,261)
    double v363 = v1[((v5 * 128) + 51)];	// L366, [255,257)
    double v364 = v3[51];	// L367, [255,257)
    double v365 = v363 * v364;	// L368, [257,261)
    double v366 = v359 + v365;	// L369, [261,266)
    double v367 = v1[((v5 * 128) + 115)];	// L370, [255,257)
    double v368 = v367 * v364;	// L371, [257,261)
    double v369 = v362 + v368;	// L372, [261,266)
    double v370 = v1[((v5 * 128) + 52)];	// L373, [260,262)
    double v371 = v3[52];	// L374, [260,262)
    double v372 = v370 * v371;	// L375, [262,266)
    double v373 = v366 + v372;	// L376, [266,271)
    double v374 = v1[((v5 * 128) + 116)];	// L377, [260,262)
    double v375 = v374 * v371;	// L378, [262,266)
    double v376 = v369 + v375;	// L379, [266,271)
    double v377 = v1[((v5 * 128) + 53)];	// L380, [265,267)
    double v378 = v3[53];	// L381, [265,267)
    double v379 = v377 * v378;	// L382, [267,271)
    double v380 = v373 + v379;	// L383, [271,276)
    double v381 = v1[((v5 * 128) + 117)];	// L384, [265,267)
    double v382 = v381 * v378;	// L385, [267,271)
    double v383 = v376 + v382;	// L386, [271,276)
    double v384 = v1[((v5 * 128) + 54)];	// L387, [270,272)
    double v385 = v3[54];	// L388, [270,272)
    double v386 = v384 * v385;	// L389, [272,276)
    double v387 = v380 + v386;	// L390, [276,281)
    double v388 = v1[((v5 * 128) + 118)];	// L391, [270,272)
    double v389 = v388 * v385;	// L392, [272,276)
    double v390 = v383 + v389;	// L393, [276,281)
    double v391 = v1[((v5 * 128) + 55)];	// L394, [275,277)
    double v392 = v3[55];	// L395, [275,277)
    double v393 = v391 * v392;	// L396, [277,281)
    double v394 = v387 + v393;	// L397, [281,286)
    double v395 = v1[((v5 * 128) + 119)];	// L398, [275,277)
    double v396 = v395 * v392;	// L399, [277,281)
    double v397 = v390 + v396;	// L400, [281,286)
    double v398 = v1[((v5 * 128) + 56)];	// L401, [280,282)
    double v399 = v3[56];	// L402, [280,282)
    double v400 = v398 * v399;	// L403, [282,286)
    double v401 = v394 + v400;	// L404, [286,291)
    double v402 = v1[((v5 * 128) + 120)];	// L405, [280,282)
    double v403 = v402 * v399;	// L406, [282,286)
    double v404 = v397 + v403;	// L407, [286,291)
    double v405 = v1[((v5 * 128) + 57)];	// L408, [285,287)
    double v406 = v3[57];	// L409, [285,287)
    double v407 = v405 * v406;	// L410, [287,291)
    double v408 = v401 + v407;	// L411, [291,296)
    double v409 = v1[((v5 * 128) + 121)];	// L412, [285,287)
    double v410 = v409 * v406;	// L413, [287,291)
    double v411 = v404 + v410;	// L414, [291,296)
    double v412 = v1[((v5 * 128) + 58)];	// L415, [290,292)
    double v413 = v3[58];	// L416, [290,292)
    double v414 = v412 * v413;	// L417, [292,296)
    double v415 = v408 + v414;	// L418, [296,301)
    double v416 = v1[((v5 * 128) + 122)];	// L419, [290,292)
    double v417 = v416 * v413;	// L420, [292,296)
    double v418 = v411 + v417;	// L421, [296,301)
    double v419 = v1[((v5 * 128) + 59)];	// L422, [295,297)
    double v420 = v3[59];	// L423, [295,297)
    double v421 = v419 * v420;	// L424, [297,301)
    double v422 = v415 + v421;	// L425, [301,306)
    double v423 = v1[((v5 * 128) + 123)];	// L426, [295,297)
    double v424 = v423 * v420;	// L427, [297,301)
    double v425 = v418 + v424;	// L428, [301,306)
    double v426 = v1[((v5 * 128) + 60)];	// L429, [300,302)
    double v427 = v3[60];	// L430, [300,302)
    double v428 = v426 * v427;	// L431, [302,306)
    double v429 = v422 + v428;	// L432, [306,311)
    double v430 = v1[((v5 * 128) + 124)];	// L433, [300,302)
    double v431 = v430 * v427;	// L434, [302,306)
    double v432 = v425 + v431;	// L435, [306,311)
    double v433 = v1[((v5 * 128) + 61)];	// L436, [305,307)
    double v434 = v3[61];	// L437, [305,307)
    double v435 = v433 * v434;	// L438, [307,311)
    double v436 = v429 + v435;	// L439, [311,316)
    double v437 = v1[((v5 * 128) + 125)];	// L440, [305,307)
    double v438 = v437 * v434;	// L441, [307,311)
    double v439 = v432 + v438;	// L442, [311,316)
    double v440 = v1[((v5 * 128) + 62)];	// L443, [310,312)
    double v441 = v3[62];	// L444, [310,312)
    double v442 = v440 * v441;	// L445, [312,316)
    double v443 = v436 + v442;	// L446, [316,321)
    double v444 = v1[((v5 * 128) + 126)];	// L447, [310,312)
    double v445 = v444 * v441;	// L448, [312,316)
    double v446 = v439 + v445;	// L449, [316,321)
    double v447 = v1[((v5 * 128) + 63)];	// L450, [315,317)
    double v448 = v3[63];	// L451, [315,317)
    double v449 = v447 * v448;	// L452, [317,321)
    double v450 = v443 + v449;	// L453, [321,326)
    v2[(v5 * 2)] = v450;	// L454, [326,327)
    double v451 = v1[((v5 * 128) + 127)];	// L455, [315,317)
    double v452 = v451 * v448;	// L456, [317,321)
    double v453 = v446 + v452;	// L457, [321,326)
    v2[((v5 * 2) + 1)] = v453;	// L458, [326,327)
  }
  v4[0] = 42.424242;	// L460, [391,392)
}

