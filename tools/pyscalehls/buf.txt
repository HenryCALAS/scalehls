#set = affine_set<(d0) : (d0 == 0)>
module attributes {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-linux-gnu"}  {
  func @kernel_3mm(%arg0: memref<40x60xf32>, %arg1: memref<60x50xf32>, %arg2: memref<50x80xf32>, %arg3: memref<80x70xf32>, %arg4: memref<40x50xf32>, %arg5: memref<50x70xf32>, %arg6: memref<40x70xf32>) attributes {llvm.linkage = #llvm.linkage<external>, resource = #hlscpp.r<lut=0, dsp=15, bram=0, nonShareDsp=15>, timing = #hlscpp.t<0 -> 6497188, 6497188, 6497188>} {
    %c0_i32 = arith.constant {timing = #hlscpp.t<0 -> 0, 0, 0>} 0 : i32
    %0 = arith.sitofp %c0_i32 {timing = #hlscpp.t<0 -> 0, 0, 0>} : i32 to f32
    affine.for %arg7 = 0 to 60 {
      affine.for %arg8 = 0 to 40 {
        affine.for %arg9 = 0 to 50 {
          affine.if #set(%arg7) {
            affine.store %0, %arg4[%arg8, %arg9] {partition_indices = [0, 0], timing = #hlscpp.t<3 -> 4, 1, 1>} : memref<40x50xf32>
          } {timing = #hlscpp.t<3 -> 3, 0, 0>}
          %1 = affine.load %arg0[%arg8, %arg7] {partition_indices = [0, 0], timing = #hlscpp.t<0 -> 2, 2, 1>} : memref<40x60xf32>
          %2 = affine.load %arg1[%arg7, %arg9] {partition_indices = [0, 0], timing = #hlscpp.t<0 -> 2, 2, 1>} : memref<60x50xf32>
          %3 = arith.mulf %1, %2 {timing = #hlscpp.t<2 -> 6, 4, 1>} : f32
          %4 = affine.load %arg4[%arg8, %arg9] {partition_indices = [0, 0], timing = #hlscpp.t<4 -> 6, 2, 1>} : memref<40x50xf32>
          %5 = arith.addf %4, %3 {timing = #hlscpp.t<6 -> 11, 5, 1>} : f32
          affine.store %5, %arg4[%arg8, %arg9] {partition_indices = [0, 0], timing = #hlscpp.t<11 -> 12, 1, 1>} : memref<40x50xf32>
        } {loop_info = #hlscpp.l<flattenTripCount=50, iterLatency=12, minII=12>, resource = #hlscpp.r<lut=0, dsp=5, bram=0, nonShareDsp=5>, timing = #hlscpp.t<0 -> 602, 602, 602>}
      } {loop_info = #hlscpp.l<flattenTripCount=40, iterLatency=602, minII=602>, resource = #hlscpp.r<lut=0, dsp=5, bram=0, nonShareDsp=5>, timing = #hlscpp.t<0 -> 24082, 24082, 24082>}
    } {loop_info = #hlscpp.l<flattenTripCount=60, iterLatency=24082, minII=24082>, resource = #hlscpp.r<lut=0, dsp=5, bram=0, nonShareDsp=5>, timing = #hlscpp.t<0 -> 1444922, 1444922, 1444922>}
    affine.for %arg7 = 0 to 80 {
      affine.for %arg8 = 0 to 50 {
        affine.for %arg9 = 0 to 70 {
          affine.if #set(%arg7) {
            affine.store %0, %arg5[%arg8, %arg9] {partition_indices = [0, 0], timing = #hlscpp.t<3 -> 4, 1, 1>} : memref<50x70xf32>
          } {timing = #hlscpp.t<3 -> 3, 0, 0>}
          %1 = affine.load %arg2[%arg8, %arg7] {partition_indices = [0, 0], timing = #hlscpp.t<0 -> 2, 2, 1>} : memref<50x80xf32>
          %2 = affine.load %arg3[%arg7, %arg9] {partition_indices = [0, 0], timing = #hlscpp.t<0 -> 2, 2, 1>} : memref<80x70xf32>
          %3 = arith.mulf %1, %2 {timing = #hlscpp.t<2 -> 6, 4, 1>} : f32
          %4 = affine.load %arg5[%arg8, %arg9] {partition_indices = [0, 0], timing = #hlscpp.t<4 -> 6, 2, 1>} : memref<50x70xf32>
          %5 = arith.addf %4, %3 {timing = #hlscpp.t<6 -> 11, 5, 1>} : f32
          affine.store %5, %arg5[%arg8, %arg9] {partition_indices = [0, 0], timing = #hlscpp.t<11 -> 12, 1, 1>} : memref<50x70xf32>
        } {loop_info = #hlscpp.l<flattenTripCount=70, iterLatency=12, minII=12>, resource = #hlscpp.r<lut=0, dsp=5, bram=0, nonShareDsp=5>, timing = #hlscpp.t<0 -> 842, 842, 842>}
      } {loop_info = #hlscpp.l<flattenTripCount=50, iterLatency=842, minII=842>, resource = #hlscpp.r<lut=0, dsp=5, bram=0, nonShareDsp=5>, timing = #hlscpp.t<0 -> 42102, 42102, 42102>}
    } {loop_info = #hlscpp.l<flattenTripCount=80, iterLatency=42102, minII=42102>, resource = #hlscpp.r<lut=0, dsp=5, bram=0, nonShareDsp=5>, timing = #hlscpp.t<1444922 -> 4813084, 3368162, 3368162>}
    affine.for %arg7 = 0 to 50 {
      affine.for %arg8 = 0 to 40 {
        affine.for %arg9 = 0 to 70 {
          affine.if #set(%arg7) {
            affine.store %0, %arg6[%arg8, %arg9] {partition_indices = [0, 0], timing = #hlscpp.t<3 -> 4, 1, 1>} : memref<40x70xf32>
          } {timing = #hlscpp.t<3 -> 3, 0, 0>}
          %1 = affine.load %arg4[%arg8, %arg7] {partition_indices = [0, 0], timing = #hlscpp.t<0 -> 2, 2, 1>} : memref<40x50xf32>
          %2 = affine.load %arg5[%arg7, %arg9] {partition_indices = [0, 0], timing = #hlscpp.t<0 -> 2, 2, 1>} : memref<50x70xf32>
          %3 = arith.mulf %1, %2 {timing = #hlscpp.t<2 -> 6, 4, 1>} : f32
          %4 = affine.load %arg6[%arg8, %arg9] {partition_indices = [0, 0], timing = #hlscpp.t<4 -> 6, 2, 1>} : memref<40x70xf32>
          %5 = arith.addf %4, %3 {timing = #hlscpp.t<6 -> 11, 5, 1>} : f32
          affine.store %5, %arg6[%arg8, %arg9] {partition_indices = [0, 0], timing = #hlscpp.t<11 -> 12, 1, 1>} : memref<40x70xf32>
        } {loop_info = #hlscpp.l<flattenTripCount=70, iterLatency=12, minII=12>, resource = #hlscpp.r<lut=0, dsp=5, bram=0, nonShareDsp=5>, timing = #hlscpp.t<0 -> 842, 842, 842>}
      } {loop_info = #hlscpp.l<flattenTripCount=40, iterLatency=842, minII=842>, resource = #hlscpp.r<lut=0, dsp=5, bram=0, nonShareDsp=5>, timing = #hlscpp.t<0 -> 33682, 33682, 33682>}
    } {loop_info = #hlscpp.l<flattenTripCount=50, iterLatency=33682, minII=33682>, resource = #hlscpp.r<lut=0, dsp=5, bram=0, nonShareDsp=5>, timing = #hlscpp.t<4813084 -> 6497186, 1684102, 1684102>}
    return {timing = #hlscpp.t<6497186 -> 6497186, 0, 0>}
  }
}

